@using MudBlazor
@using DomainModels
@using DomainModels.DTO
@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject PlayerService PlayerService
@inject AuthenticationStateProvider AuthStateProv
@inject LayoutService LayoutService
<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

@*
Logout logo: @Icons.Material.Filled.Logout
User settings logo: @Icons.Material.Filled.ManageAccounts
Password icon (in case of whatever) @Icons.Material.Filled.Password


*@

<MudLayout>
    <MudAppBar Fixed="false" Color="Color.Primary">
        <div style="display: flex; width: 100%; align-items: center;">
            <MudSpacer />
            <AuthorizeView>
                <Authorized>
                    <MudText Class="mr-2">@username</MudText>
                    <MudTooltip Text="Settings">
                        <MudMenu Icon="@Icons.Material.Filled.MiscellaneousServices" Color="Color.Inherit">
                            <MudMenuItem>
                                <MudTooltip Text="User settings">
                                    <MudIconButton Icon="@Icons.Material.Filled.ManageAccounts" Color="Color.Inherit" OnClick="@UserSettingsNavigate" />
                                </MudTooltip>
                            </MudMenuItem>
                            <MudMenuItem>
                                <MudTooltip Text="Logout">
                                    <MudIconButton Icon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="@LogoutNavigate" />
                                </MudTooltip>
                            </MudMenuItem>
                        </MudMenu>
                    </MudTooltip>
                </Authorized>
                <NotAuthorized>
                    <MudTooltip Text="Login">
                        <MudIconButton Icon="@Icons.Material.Filled.Login" Color="Color.Inherit" onclick="@LoginNavigate" />
                    </MudTooltip>
                    <MudTooltip Text="Register">
                        <MudIconButton Icon="@Icons.Material.Filled.PersonAddAlt1" Color="Color.Inherit" OnClick="@RegisterNavigate" />
                    </MudTooltip>
                </NotAuthorized>
            </AuthorizeView>
        </div>
    </MudAppBar>

    <!-- Main layout below the AppBar -->
    <MudContainer MaxWidth="MaxWidth.False" Class="d-flex">
        <!-- Sidebar / NavMenu -->
        <NavMenu />

        <!-- Main Page Content -->
        <MudMainContent Class="p-4">
            @Body
        </MudMainContent>
    </MudContainer>

</MudLayout>

@code {
    private Player player = new Player();
    private string username;
    Guid usersID;
    public bool isAuthorized = false;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthStateProv.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity != null && user.Identity.IsAuthenticated)
        {
            var userID = user.Claims.FirstOrDefault(c => c.Type == "sub");

            if(userID != null)
            {
                Console.WriteLine(userID);
                string idString = userID.Value;
                Guid guid = new Guid(idString);
                usersID = guid;
                player = await PlayerService.GetPlayer(usersID);
                username = player.UserName;
                StateHasChanged();
            }
            else
            {
                Console.WriteLine("No 'sub' claim found for authenticated user.");
            }
        }
        else
        {
            Console.WriteLine("User is not authenticated — skipping user info setup.");
        }
    }

    public void Dispose()
    {
        LayoutService.OnLayoutChanged -= StateHasChanged;
    }

    private async Task UserSettingsNavigate()
    {
        NavigationManager.NavigateTo("/userpage");
    }
    private async Task LogoutNavigate()
    {
        NavigationManager.NavigateTo("/Logout");
    }
    private async Task LoginNavigate()
    {
        NavigationManager.NavigateTo("/login");
    }
    private async Task RegisterNavigate()
    {
        NavigationManager.NavigateTo("/signup");
    }
}