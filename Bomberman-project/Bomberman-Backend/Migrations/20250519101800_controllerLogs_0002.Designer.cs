// <auto-generated />
using System;
using Bomberman_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Bomberman_Backend.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250519101800_controllerLogs_0002")]
    partial class controllerLogs_0002
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("DomainModels.Bomb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("explosionRadius")
                        .HasColumnType("integer");

                    b.Property<int>("fuseTime")
                        .HasColumnType("integer");

                    b.Property<string>("xCordinate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("yCordinate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("bomb");
                });

            modelBuilder.Entity("DomainModels.ControllerLogs", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("InputType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("PlayerID")
                        .HasMaxLength(200)
                        .HasColumnType("uuid");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PlayerID")
                        .IsUnique();

                    b.ToTable("controllerLogs");
                });

            modelBuilder.Entity("DomainModels.Leaderboard", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("id"));

                    b.Property<int>("hightScore")
                        .HasColumnType("integer");

                    b.Property<int>("totalGames")
                        .HasColumnType("integer");

                    b.Property<int>("totalWins")
                        .HasColumnType("integer");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("id");

                    b.ToTable("leaderboards");
                });

            modelBuilder.Entity("DomainModels.Lobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<Guid>("HostUserID")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("lobby");
                });

            modelBuilder.Entity("DomainModels.PowerUp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Effect")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("duration")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("powerup");
                });

            modelBuilder.Entity("DomainModels.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("Token")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("refreshTokens");
                });

            modelBuilder.Entity("DomainModels.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("Session");
                });

            modelBuilder.Entity("DomainModels.User", b =>
                {
                    b.Property<Guid>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("users");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("DomainModels.Player", b =>
                {
                    b.HasBaseType("DomainModels.User");

                    b.Property<int>("bombId")
                        .HasColumnType("integer");

                    b.Property<string>("characterColor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("inLobby")
                        .HasColumnType("boolean");

                    b.Property<long>("lives")
                        .HasColumnType("bigint");

                    b.Property<int?>("lobbyId")
                        .HasColumnType("integer");

                    b.Property<int?>("powerUpId")
                        .HasColumnType("integer");

                    b.Property<long>("score")
                        .HasColumnType("bigint");

                    b.Property<int>("sessionIdId")
                        .HasColumnType("integer");

                    b.Property<int>("wins")
                        .HasColumnType("integer");

                    b.HasIndex("bombId");

                    b.HasIndex("lobbyId");

                    b.HasIndex("powerUpId");

                    b.HasIndex("sessionIdId");

                    b.ToTable("players");
                });

            modelBuilder.Entity("DomainModels.ControllerLogs", b =>
                {
                    b.HasOne("DomainModels.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("DomainModels.RefreshToken", b =>
                {
                    b.HasOne("DomainModels.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("DomainModels.Player", b =>
                {
                    b.HasOne("DomainModels.User", null)
                        .WithOne()
                        .HasForeignKey("DomainModels.Player", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.Bomb", "bomb")
                        .WithMany()
                        .HasForeignKey("bombId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DomainModels.Lobby", "lobby")
                        .WithMany("Players")
                        .HasForeignKey("lobbyId");

                    b.HasOne("DomainModels.PowerUp", "powerUp")
                        .WithMany()
                        .HasForeignKey("powerUpId");

                    b.HasOne("DomainModels.Session", "sessionId")
                        .WithMany()
                        .HasForeignKey("sessionIdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bomb");

                    b.Navigation("lobby");

                    b.Navigation("powerUp");

                    b.Navigation("sessionId");
                });

            modelBuilder.Entity("DomainModels.Lobby", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
